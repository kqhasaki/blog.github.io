{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/articles/front-end/leaflet-line-adsorption",
    "result": {"pageContext":{"data":{"node":{"id":"ddc14172-af95-5d2c-a8c6-00cf9301bd7d","frontmatter":{"cover":"https://tva1.sinaimg.cn/large/e6c9d24egy1h1ec1zxlgyg20ee0ee1fu.gif","date":"2022-04-19","title":"地图工具中的线条吸附——一个简单方案"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"地图工具中的线条吸附——一个简单方案\",\n  \"date\": \"2022-04-19T00:00:00.000Z\",\n  \"cover\": \"https://tva1.sinaimg.cn/large/e6c9d24egy1h1ec1zxlgyg20ee0ee1fu.gif\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u7B14\\u8005\\u5F53\\u524D\\u7684\\u5DE5\\u4F5C\\u662F\\u57FA\\u4E8E\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"leaflet\"), \"\\u5F00\\u53D1\\u4E00\\u4E9B\\u4F9B\\u516C\\u53F8\\u5185\\u90E8\\u4F7F\\u7528\\u7684\\u5730\\u56FE\\u5DE5\\u5177\\u5E73\\u53F0\\u8F6F\\u4EF6\\u3002\\u5728\\u8FD1\\u671F\\u5DE5\\u4F5C\\u4E2D\\u9047\\u5230\\u51E0\\u6B21\\u9700\\u8981\\u5728\\u5730\\u56FE\\u4E0A\\u5B9E\\u73B0\\u5C06\\u67D0\\u4E2A\\u7ED8\\u5236\\u7684\\u7EBF\\u6761\\uFF08\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"polyline\"), \"\\uFF09\\u5438\\u9644\\u5230\\u6700\\u8FD1\\u7684\\u67D0\\u6761\\u7EBF\\u6761\\uFF08\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"polyline\"), \"\\uFF09\\u4E0A\\u7684\\u529F\\u80FD\\u3002\\u8FD9\\u91CC\\u603B\\u7ED3\\u4E00\\u4E2A\\u6BD4\\u8F83\\u901A\\u7528\\u7684\\uFF0C\\u8F83\\u4E3A\\u57FA\\u7840\\u7684\\u65B9\\u6848\\uFF0C\\u65B9\\u4FBF\\u540E\\u7EED\\u9047\\u5230\\u7C7B\\u4F3C\\u95EE\\u9898\\u80FD\\u591F\\u5FEB\\u901F\\u89E3\\u51B3\\u3002\"), mdx(\"h1\", null, \"\\u83B7\\u53D6\\u9644\\u8FD1\\u7EBF\\u6761\\u96C6\\u5408\"), mdx(\"p\", null, \"\\u7B2C\\u4E00\\u6B65\\u662F\\u786E\\u5B9A\\u8DDD\\u79BB\\u5730\\u56FE\\u4E0A\\u8DDD\\u79BB\\u5F53\\u524D\\u5730\\u7406\\u5750\\u6807\\u6700\\u8FD1\\u7684\\u7EBF\\u6761\\u5143\\u7D20\\u3002\\u8FD9\\u91CC\\u6CA1\\u6709\\u592A\\u591A\\u6280\\u5DE7\\uFF0C\\u8981\\u4E48\\u5C06\\u8FD9\\u4E2A\\u903B\\u8F91\\u505A\\u5728\\u540E\\u7AEF\\uFF0C\\u901A\\u8FC7 GIS \\u6570\\u636E\\u5E93\\u6765\\u4F18\\u5316\\u8FD9\\u79CD\\u6839\\u636E\\u5730\\u7406\\u4FE1\\u606F\\u6761\\u4EF6\\u8FDB\\u884C\\u7B5B\\u9009\\u7684\\u64CD\\u4F5C\\u3002\\n\\u53E6\\u4E00\\u79CD\\u65B9\\u6CD5\\u662F\\u5728\\u524D\\u7AEF\\u8FDB\\u884C\\u7B5B\\u9009\\uFF0C\\u8FD9\\u91CC\\u53EF\\u4EE5\\u6846\\u9009\\u67D0\\u4E2A\\u5750\\u6807\\u8303\\u56F4\\u6216\\u8005\\u6839\\u636E\\u8DDD\\u79BB\\u6392\\u5E8F\\uFF0C\\u9009\\u62E9\\u524D\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"k\"), \"\\u4E2A\\u5143\\u7D20\\u3002\"), mdx(\"p\", null, \"\\u4ECE\\u6027\\u80FD\\u548C\\u901A\\u7528\\u6027\\u8003\\u8651\\uFF0C\\u6700\\u597D\\u5C06\\u8FD9\\u79CD\\u903B\\u8F91\\u5C01\\u88C5\\u5728\\u540E\\u7AEF\\u3002\\u901A\\u8FC7\\u5EFA\\u7ACB\\u826F\\u597D\\u8BBE\\u8BA1\\u7684\\u5730\\u7406\\u4FE1\\u606F\\u6570\\u636E\\u5E93\\uFF0C\\u80FD\\u591F\\u9AD8\\u6027\\u80FD\\u5730\\u6839\\u636E\\u5730\\u7406\\u5750\\u6807\\u6765\\u67E5\\u8BE2\\u6EE1\\u8DB3\\u6307\\u5B9A\\u6761\\u4EF6\\u7684\\u5404\\u79CD\\u5143\\u7D20\\uFF0C\\u8FD9\\u5BF9\\u57FA\\u4E8E GIS \\u7684\\u5E94\\u7528\\u5F00\\u53D1\\u5F88\\u91CD\\u8981\\u3002\"), mdx(\"h1\", null, \"\\u524D\\u7AEF\\u8BA1\\u7B97\\u5730\\u7406\\u8DDD\\u79BB\"), mdx(\"p\", null, \"\\u8981\\u5C06\\u4E00\\u4E2A\\u7EBF\\u6761\\u5438\\u9644\\u5230\\u67D0\\u4E00\\u6307\\u5B9A\\u7EBF\\u6761\\u4E0A\\uFF0C\\u6700\\u91CD\\u8981\\u7684\\u4E00\\u6B65\\u662F\\u786E\\u5B9A\\u6700\\u8FD1\\u7684\\u7EBF\\u6761\\u5143\\u7D20\\u3002\\u6211\\u4EEC\\u5DF2\\u7ECF\\u77E5\\u9053\\uFF0C\\u5982\\u679C\\u80FD\\u591F\\u5C01\\u88C5\\u4E00\\u4E2A\\u9AD8\\u6027\\u80FD\\u7684\\u901A\\u7528\\u63A5\\u53E3\\u662F\\u6BD4\\u8F83\\u597D\\u7684\\u3002\\u4F46\\u662F\\u5982\\u679C\\u975E\\u8981\\u5728\\u524D\\u7AEF\\u8BA1\\u7B97\\u8FD9\\u4E2A\\u8DDD\\u79BB\\uFF0C\\u4E5F\\u6709\\u529E\\u6CD5\\u3002\"), mdx(\"p\", null, \"\\u9996\\u5148\\u9700\\u8981\\u660E\\u786E\\u7684\\u662F\\uFF0C\\u76EE\\u524D\\u5730\\u56FE\\u5143\\u7D20\\u7684\\u5730\\u7406\\u5750\\u6807\\u90FD\\u662F\\u201C\\u7ECF\\u5EA6\\u201D\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lat\"), \"\\u548C\\u201C\\u7EAC\\u5EA6\\u201D\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lng\"), \"\\u503C\\uFF0C\\u5B83\\u4EEC\\u4E00\\u822C\\u90FD\\u662F\\u53CC\\u7CBE\\u5EA6\\u6D6E\\u70B9\\u6570\\u3002\\u4E00\\u822C\\u6765\\u8BF4\\uFF0C\\u9700\\u8981\\u770B\\u7ED8\\u5236\\u7EBF\\u6761\\u7684\\u7EC8\\u70B9\\u79BB\\u8C01\\u6700\\u8FD1\\u6765\\u786E\\u5B9A\\u5438\\u9644\\u5230\\u54EA\\u6761\\u7EBF\\u4E0A\\u53BB\\u3002\\u4E5F\\u5C31\\u662F\\u8BF4\\u6C42\\u89E3\\u4E00\\u4E2A\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"(lat, lng)\"), \"\\u5750\\u6807\\u70B9\\u5230\\u67D0\\u4E00\\u6761\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[(lat, lng), (lat, lng)...]\"), \"\\u8F68\\u8FF9\\u7EBF\\u7684\\u8DDD\\u79BB\\u3002\\u5F53\\u7136\\uFF0C\\u4E00\\u822C\\u60C5\\u51B5\\u4E0B\\uFF0C\\u9700\\u8981\\u5438\\u9644\\u7684\\u7EBF\\u6761\\u662F\\u76F4\\u7EBF\\u6BB5\\uFF0C\\u4F46\\u6709\\u65F6\\u5019\\u4E5F\\u4F1A\\u6709\\u6298\\u7EBF\\u7684\\u60C5\\u51B5\\u3002\\u5728\\u8BA1\\u7B97\\u5230\\u6298\\u7EBF\\u8DDD\\u79BB\\u7684\\u65F6\\u5019\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u8BA1\\u7B97\\u70B9\\u5230\\u6298\\u7EBF\\u4E0A\\u5404\\u4E2A\\u7EBF\\u6BB5\\u8DDD\\u79BB\\u7684\\u52A0\\u6743\\u5E73\\u5747\\u3002\"), mdx(\"p\", null, \"\\u7531\\u4E8E\\u7EDD\\u5927\\u591A\\u6570\\u60C5\\u51B5\\u4E0B\\u9700\\u8981\\u5438\\u9644\\u7684\\u8F68\\u8FF9\\u7EBF\\u662F\\u8FD1\\u4F3C\\u76F4\\u7EBF\\u6BB5\\u7684\\uFF0C\\u56E0\\u6B64\\u6211\\u4EEC\\u7B80\\u5355\\u5730\\u8BA1\\u7B97\\u70B9\\u5230\\u76F4\\u7EBF\\u7684\\u8DDD\\u79BB\\u5373\\u53EF\\u3002\\u4E8E\\u662F\\u5F88\\u7B80\\u5355\\u5730\\u53EF\\u4EE5\\u4F7F\\u7528\\u4E24\\u79CD\\u65B9\\u6CD5\\uFF1A1\\uFF09\\u901A\\u8FC7\\u76F4\\u7EBF\\u65B9\\u7A0B\\u6C42\\u89E3\\u70B9\\u5230\\u76F4\\u7EBF\\u8DDD\\u79BB\\uFF1B2\\uFF09\\u6784\\u9020\\u4E09\\u89D2\\u5F62\\u6765\\u8BA1\\u7B97\\u9AD8\\u3002\\u7531\\u4E8E\\u6211\\u4EEC\\u7684\\u5750\\u6807\\u70B9 A\\uFF08\\u7EC8\\u70B9\\uFF09\\u548C\\u8F68\\u8FF9\\u90FD\\u662F\\u7ECF\\u7EAC\\u5EA6\\u5750\\u6807\\u7EC4\\u6210\\uFF0C\\u5B9E\\u9645\\u4E0A\\u4F4D\\u4E8E\\u4E00\\u4E2A\\u7403\\u9762\\u4E0A\\uFF0C\\u53EA\\u80FD\\u8FD1\\u4F3C\\u5730\\u6784\\u9020\\u7B1B\\u5361\\u5C14\\u5750\\u6807\\u7CFB\\uFF0C\\u56E0\\u6B64\\u8FD9\\u91CC\\u901A\\u8FC7\\u76F4\\u7EBF\\u65B9\\u7A0B\\u6C42\\u89E3\\u4F1A\\u6709\\u4E00\\u4E9B\\u8BEF\\u5DEE\\uFF1B\\u4E2A\\u4EBA\\u6BD4\\u8F83\\u63A8\\u8350\\u7B2C\\u4E8C\\u79CD\\u65B9\\u6CD5\\uFF0C\\u9996\\u5148\\u901A\\u8FC7\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Spherical_law_of_cosines\"\n  }, \"\\u7403\\u9762\\u4E0A\\u8BA1\\u7B97\\u70B9\\u5230\\u70B9\\u8DDD\\u79BB\\u7684\\u65B9\\u6CD5\"), \"\\u6765\\u8BA1\\u7B97\\u8F68\\u8FF9\\u7684\\u4E24\\u4E2A\\u7AEF\\u70B9\\u548C\\u5750\\u6807\\u70B9 A \\u6784\\u6210\\u7684\\u4E09\\u89D2\\u5F62\\u7684\\u4E09\\u6761\\u8FB9\\u957F\\uFF0C\\u4E4B\\u540E\\u4F7F\\u7528\\u4F59\\u5F26\\u5B9A\\u7406\\u53EF\\u4EE5\\u6C42\\u51FA\\u89D2\\u5EA6\\uFF0C\\u4ECE\\u800C\\u83B7\\u53D6\\u9AD8\\u5EA6\\uFF0C\\u5373\\u53EF\\u6C42\\u5F97\\u8DDD\\u79BB\\u3002\"), mdx(\"h1\", null, \"\\u5BF9\\u7A00\\u758F\\u8F68\\u8FF9\\u7EBF\\u63D2\\u503C\"), mdx(\"p\", null, \"\\u5438\\u9644\\u672C\\u8D28\\u4E0A\\u5C31\\u662F\\u6784\\u9020\\u4E00\\u6761\\u65B0\\u7684\\u8F68\\u8FF9\\u7EBF\\uFF0C\\u8FD9\\u4E2A\\u65B0\\u7684\\u8F68\\u8FF9\\u7EBF\\u9700\\u8981\\u5C3D\\u53EF\\u80FD\\u63A5\\u8FD1\\u7ED8\\u5236\\u7684\\u7EBF\\u6761\\uFF0C\\u5E76\\u4E14\\u5F62\\u72B6\\u5951\\u5408\\u5438\\u9644\\u76EE\\u6807\\u3002\\u6240\\u4EE5\\u9996\\u5148\\u6211\\u4EEC\\u83B7\\u53D6\\u5438\\u9644\\u76EE\\u6807\\u7EBF\\u6761\\u7684\\u6240\\u6709\\u70B9\\u5750\\u6807\\uFF0C\\u7136\\u540E\\u5BF9\\u5176\\u8FDB\\u884C\\u63D2\\u503C\\u3002\\u4E4B\\u540E\\u5728\\u63D2\\u503C\\u540E\\u7684\\u5BC6\\u96C6\\u5750\\u6807\\u70B9\\u5217\\u8868\\u4E2D\\u5339\\u914D\\u6700\\u63A5\\u8FD1\\u5F85\\u5438\\u9644\\u8F68\\u8FF9\\u8D77\\u70B9\\u548C\\u7EC8\\u70B9\\u7684\\u4F4D\\u7F6E\\uFF0C\\u7136\\u540E\\u622A\\u53D6\\u8FD9\\u4E2A\\u533A\\u95F4\\u5185\\u7684\\u5750\\u6807\\u70B9\\u5373\\u53EF\\u3002\"), mdx(\"h1\", null, \"\\u4EE3\\u7801\\u793A\\u4F8B\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"jsx\",\n    \"theme\": \"one-dark\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"// \\u83B7\\u53D6\\u6700\\u8FD1\\u8981\\u5438\\u9644\\u7684\\u76EE\\u6807boundary\\nfunction utilSelectNearestBoundary({ point, boundarys }) {\\n  const boundaryList = [...boundarys]\\n  const getDistanceToBoundary = window.utilGetDistanceToBoundary\\n  boundaryList.sort(\\n    (a, b) =>\\n      getDistanceToBoundary({ point, boundary: a }) -\\n      getDistanceToBoundary({ point, boundary: b })\\n  )\\n  return boundaryList[0]\\n}\\n\\n// \\u5BF9boundary\\u8FDB\\u884C\\u63D2\\u503C\\nfunction utilGetInsertedBoundary(route) {\\n  const maxDistance = 0.1\\n  const routeInserted = [...route]\\n  let idx = 1\\n  while (idx < routeInserted.length) {\\n    const pre = routeInserted[idx - 1]\\n    const cur = routeInserted[idx]\\n    const distance = pre.distanceTo(cur)\\n    if (distance <= maxDistance) {\\n      idx++\\n      continue\\n    }\\n    routeInserted.splice(idx, 0, window.utilGetMidLatlng(pre, cur))\\n  }\\n  return routeInserted\\n}\\n\\n// \\u8BA1\\u7B97\\u4E24\\u4E2Alatlng\\u4E2D\\u70B9\\nfunction utilGetMidLatlng(point1, point2) {\\n  const midPosition = L.latLngBounds([point1, point2]).getCenter()\\n  return midPosition\\n}\\n\\n// \\u8BA1\\u7B97\\u70B9\\u5230boundary\\u7684\\u8DDD\\u79BB\\nfunction utilGetDistanceToBoundary({ point, boundary }) {\\n  const { latlngs } = boundary\\n  const boundaryStart = latlngs[0]\\n  const boundaryEnd = latlngs[latlngs.length - 1]\\n  const a = point.distanceTo(boundaryStart)\\n  const c = point.distanceTo(boundaryEnd)\\n  const b = boundaryStart.distanceTo(boundaryEnd)\\n  const cosineAlpha = (a ** 2 + b ** 2 - c ** 2) / (2 * a * b)\\n  const sineAlpha = Math.sqrt(1 - cosineAlpha ** 2)\\n  const h = a * sineAlpha\\n  return h\\n}\\n\\n// \\u5C06dashSeg\\u5438\\u9644\\u5230\\u6700\\u8FD1\\u7684boundary\\nfunction utilAttachDashSegToNearestBounary({ dashSeg, nearestBoundary }) {\\n  const boundaryInserted = window.utilGetInsertedBoundary(\\n    nearestBoundary.latlngs\\n  )\\n\\n  const latlngs = dashSeg.getLatLngs()\\n  const startPoint = latlngs[0]\\n  const endPoint = latlngs[latlngs.length - 1]\\n\\n  const startPointer = { idx: 0, distance: Infinity }\\n  const endPointer = { idx: 0, distance: Infinity }\\n\\n  for (let i = 0; i < boundaryInserted.length; i++) {\\n    const currLatlng = boundaryInserted[i]\\n    const distanceToStart = startPoint.distanceTo(currLatlng)\\n    if (distanceToStart < startPointer.distance) {\\n      startPointer.idx = i\\n      startPointer.distance = distanceToStart\\n    }\\n    const distanceToEnd = endPoint.distanceTo(currLatlng)\\n    if (distanceToEnd < endPointer.distance) {\\n      endPointer.idx = i\\n      endPointer.distance = distanceToEnd\\n    }\\n  }\\n  const startIdx = Math.min(startPointer.idx, endPointer.idx)\\n  const endIdx = Math.max(startPointer.idx, endPointer.idx)\\n  const transformedLatlngs = boundaryInserted.slice(startIdx, endIdx + 1)\\n  dashSeg.setLatLngs([\\n    transformedLatlngs[0],\\n    transformedLatlngs[transformedLatlngs.length - 1],\\n  ])\\n}\"), \"\\n        \"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"front-end/leaflet-line-adsorption","wordCount":{"sentences":11}}}}},
    "staticQueryHashes": ["2757060725","3605573801"]}